http:

 #region routers

  routers:

    pve:

      entryPoints:

        - "https"

      rule: "Host(`pve.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: pve

    pihole:

      entryPoints:

        - "https"

      rule: "Host(`pihole.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - addprefix-pihole

        - https-redirectscheme

      tls: {}

      service: pihole

    team-city:

      entryPoints:

        - "https"

      rule: "Host(`teamcity.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: teamcity

    uptimekuma:

      # For Homeassistant config, check: https://www.home-assistant.io/integrations/http/#reverse-proxies

      # This relies on Homeassistant using http. No certs are needed in the Homeassistant config.

      entryPoints:

        - "https"

      rule: "Host(`uptimekuma.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: uptimekuma

    vs:

      entryPoints:

        - "https"

      rule: "Host(`vs.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: vs

    wikijs:

      entryPoints:

        - "https"

      rule: "Host(`wikijs.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: wikijs

    plex:

      entryPoints:

        - "https"

      rule: "Host(`plex.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: plex

    jenkins:

      entryPoints:

        - "https"

      rule: "Host(`jenkins.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: jenkins

    rancher:

      entryPoints:

        - "https"

      rule: "Host(`octopus.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: octopus

    passbolt:

      entryPoints:

        - "https"

      rule: "Host(`passbolt.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: passbolt

    graylog:

      entryPoints:

        - "https"

      rule: "Host(`graylog.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: graylog

    grafana-prometheus:

      entryPoints:

        - "https"

      rule: "Host(`grafana-prometheus.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: grafana-prometheus    

    sonarqube:

      entryPoints:

        - "https"

      rule: "Host(`sonarqube.local.zeemshomelab.com`)"

      middlewares:

        - default-headers

        - https-redirectscheme

      tls: {}

      service: sonarqube



#endregion

#region services

  services:

    pve:

      loadBalancer:

        servers:

          - url: "https://192.168.1.2:8006"

        passHostHeader: true

    pihole:

      loadBalancer:

        servers:

          - url: "http://192.168.1.218:80"

        passHostHeader: true

    teamcity:

      loadBalancer:

        servers:

          - url: "http://192.168.1.18:8111"

        passHostHeader: true

    uptimekuma:

      loadBalancer:

        servers:

          - url: "http://192.168.1.237:3001"

        passHostHeader: true

    vs:

      loadBalancer:

        servers:

          - url: "http://192.168.1.3"

        passHostHeader: true

    wikijs:

      loadBalancer:

        servers:

          - url: "http://192.168.1.13:80"

        passHostHeader: true

    plex:

      loadBalancer:

        servers:

          - url: "http://192.168.1.226:32400"

        passHostHeader: true

    jenkins:

      loadBalancer:

        servers:

          - url: "http://192.168.1.233:8080/"

        passHostHeader: true

    octopus:

      loadBalancer:

        servers:

          - url: "http://192.168.1.11:8080"

        passHostHeader: true

    passbolt:

      loadBalancer:

        servers:

          - url: "https://192.168.1.224"

        passHostHeader: true

    graylog:

      loadBalancer:

        servers:

          - url: "http://192.168.1.19:9000"

        passHostHeader: true

    grafana-prometheus:

      loadBalancer:

        servers:

          - url: "https://192.168.1.240"

        passHostHeader: true

    sonarqube:

      loadBalancer:

        servers:

          - url: "http://192.168.1.182:9000"

        passHostHeader: true

#endregion

  middlewares:

    addprefix-pihole:

      addPrefix:

        prefix: "/admin"

    https-redirectscheme:

      redirectScheme:

        scheme: https

        permanent: true



    default-headers:

      headers:

        frameDeny: true

        browserXssFilter: true

        contentTypeNosniff: true

        forceSTSHeader: true

        stsIncludeSubdomains: true

        stsPreload: true

        stsSeconds: 15552000

        customFrameOptionsValue: SAMEORIGIN

        customRequestHeaders:

          X-Forwarded-Proto: https



    idrac:

      headers:

        frameDeny: true

        browserXssFilter: true

        forceSTSHeader: true

        stsIncludeSubdomains: true

        stsSeconds: 15552000

        customFrameOptionsValue: SAMEORIGIN

        customRequestHeaders:

          X-Forwarded-Proto: https



    default-whitelist:

      ipWhiteList:

        sourceRange:

#        - "10.0.0.0/8"

        - "192.168.1.0/24"

        - "172.16.0.0/12"



    secured:

      chain:

        middlewares:

        - default-whitelist

        - default-headers
